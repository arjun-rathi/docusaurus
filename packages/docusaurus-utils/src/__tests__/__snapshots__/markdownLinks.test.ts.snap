// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`replaceMarkdownLinks does basic replace 1`] = `
{
  "brokenMarkdownLinks": [
    {
      "contentPaths": {
        "contentPath": "docs",
        "contentPathLocalized": "i18n/docs-localized",
      },
      "filePath": "docs/intro.md",
      "link": "hmmm.md",
    },
  ],
  "newContent": "
[foo](/doc/foo)
[baz](/doc/baz)
[foo](/doc/foo)
[http](http://github.com/facebook/docusaurus/README.md)
[https](https://github.com/facebook/docusaurus/README.md)
[asset](./foo.js)
[asset as well](@site/docs/_partial.md)
[looks like http...](/doc/http)
[nonexistent](hmmm.md)
",
}
`;

exports[`replaceMarkdownLinks ignores links in HTML comments 1`] = `
{
  "brokenMarkdownLinks": [
    {
      "contentPaths": {
        "contentPath": "docs",
        "contentPathLocalized": "i18n/docs-localized",
      },
      "filePath": "docs/intro.md",
      "link": "./foo.md",
    },
    {
      "contentPaths": {
        "contentPath": "docs",
        "contentPathLocalized": "i18n/docs-localized",
      },
      "filePath": "docs/intro.md",
      "link": "./foo.md",
    },
  ],
  "newContent": "
<!-- [foo](./foo.md) -->
<!--
[foo](./foo.md)
-->
",
}
`;

exports[`replaceMarkdownLinks ignores links in fenced blocks 1`] = `
{
  "brokenMarkdownLinks": [],
  "newContent": "
\`\`\`
[foo](foo.md)
\`\`\`

\`\`\`\`js
[foo](foo.md)
\`\`\`
[foo](foo.md)
\`\`\`
[foo](foo.md)
\`\`\`\`

\`\`\`\`js
[foo](foo.md)
\`\`\`
[foo](foo.md)
\`\`\`\`
",
}
`;

exports[`replaceMarkdownLinks ignores links in inline code 1`] = `
{
  "brokenMarkdownLinks": [
    {
      "contentPaths": {
        "contentPath": "docs",
        "contentPathLocalized": "i18n/docs-localized",
      },
      "filePath": "docs/intro.md",
      "link": "foo.md",
    },
  ],
  "newContent": "
\`[foo](foo.md)\`
",
}
`;

exports[`replaceMarkdownLinks replaces links with same title as URL 1`] = `
{
  "brokenMarkdownLinks": [],
  "newContent": "
[/docs/foo](foo.md)
[/docs/foo](./foo.md)
[foo.md](/docs/foo)
[.//docs/foo](foo.md)
",
}
`;

exports[`replaceMarkdownLinks replaces multiple links on same line 1`] = `
{
  "brokenMarkdownLinks": [],
  "newContent": "
[a](/docs/a), [a](/docs/a), [b](/docs/b), [c](/docs/c)
",
}
`;

exports[`replaceMarkdownLinks replaces reference style Markdown links 1`] = `
{
  "brokenMarkdownLinks": [],
  "newContent": "
The following operations are defined for [URI]s:

* [info]: Returns metadata about the resource,
* [list]: Returns metadata about the resource's children (like getting the content of a local directory).

[URI]:    /docs/api/classes/uri
[info]:   /docs/api/classes/uri#info
[list]:   /docs/api/classes/uri#list
      ",
}
`;
